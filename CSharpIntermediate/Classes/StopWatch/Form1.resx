<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        X18d1ukAAAAASUVORK5CYII=
</value>
  </data>
</root>