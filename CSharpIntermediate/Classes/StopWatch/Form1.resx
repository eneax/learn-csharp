<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SCaECQmhAkJoQJNCECKaEIEhCEH/2Q==
</value>
  </data>
</root>